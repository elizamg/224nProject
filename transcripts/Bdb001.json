{
    "meeting_id": "Bdb001",
    "transcript": "Oh , I remember seeing an example of this . Yeah . Mmm . So you 're essentially defining a lattice . Yeah . How - how Oh , that 's That 's actually very nicely handled here because you could you could all you 'd have to change is the , um , time - stamps in the time - line without without , uh , changing the I Ds . Except the time - line is gonna be huge . If you say suppose you have a phone - level alignment . You 'd have you 'd have Why - Mmm . But but why not use it for phone - level ? It 's just a matter of it 's just a matter of it being bigger . But if you have you know , barring memory limitations , or uh I w I mean this is still the m Oh , no . You would use it only for purposes where you actually want the phone - level information , I 'd imagine . You Mm - hmm . Or you just compre I mean , I like text formats . Um , b you can always , uh , G - zip them , and , um , you know , c decompress them on the fly if y if space is really a concern . Right , OK . I would say OK , so frame - level is probably not a good idea . But for phone - level stuff it 's perfectly Like phones , or syllables , or anything like that . But but but most of the frames are actually not speech . So , you know , people don't v Look at it , words times the average The average number of phones in an English word is , I don't know , five maybe ? So , look at it , t number of words times five . That 's not that not Exactly . Yeah . I mean , I 've I 've used them . I don't know what their structure is . I 've forgot what the str Hmm . Yeah , th we have Actually , we we use a generalization of the the Sphere format . Um , but Yeah , so there is something like that but it 's , um , probably not as sophist They ha it has its own I mean , Entropic has their own feature format that 's called , like , S - SD or some so SF or something like that . Hmm ? Right . Mmm . Do they already have tools ? As long as uh each tag is on one line . Hmm . If we want to Do they already have something that 's that would be useful for us in place ? @ @ We should we should find out . It 's a hassle if I I think if it 's conceptually close , and they already have or will have tools that everybody else will be using , I mean , it would be crazy to do something s you know , separate that It seems to me you want to keep the frame - level stuff separate . And then Now now how would you how would you represent , um , multiple speakers in this framework ? Were You would just represent them as You would have like a speaker tag or something ? Mm - hmm . OK . Mm - hmm . Is i ? Well , channel or speaker or whatever . It doesn't Right . But but so how in the NIST format do we express a hierarchical relationship between , um , say , an utterance and the words within it ? So how do you tell that these are the words that belong to that utterance ? Mm - hmm . OK . So So here 's the thing . Um Hhh . Well , the thing the thing is that some something may be a part of one thing for one purpose and another thing of another purpose . So f s Um , well , s let 's let 's ta so let 's so y So for instance @ @ sup Suppose you have a word sequence and you have two different segmentations of that same word sequence . f Say , one segmentation is in terms of , um , you know , uh , sentences . And another segmentation is in terms of , um , I don't know , prosodic phrases . And let 's say that they don't nest . So , you know , a prosodic phrase may cross two sentences or something . I don't know if that 's true or not but let 's as Right . Yeah . So , you want to be s you want to say this this word is part of that sentence and this prosodic phrase . But the phrase is not part of the sentence and neither is the sentence part of the phrase . So , you would have to have two different pointers from the word up one level up , one to the sent @ @ Right . Right . Mm - hmm . The the o the other issue that you had was , how do you actually efficiently extract , um find and extract information in a structure of this type ? So you gave some examples like No , that 's not clear . I mean , yeah , you c sure you can do it , but can you do it sort of l l you know , it y y you gotta you gotta do this you you 're gonna want to do this very quickly or else you 'll spend all your time sort of searching through very complex data structures Yeah . You want sort of a grep that 's that works at the structural on the structural representation . Yeah , but it 's it 's not clear that that 's That 's relative to the structure of the XML document , not to the structure of what you 're representing in the document . Right . Right . Be - Because here you 're specifying a lattice . So the underlying that 's the underlying data structure . And you want to be able to search in that lattice . That 's different from searching through the text . Um Hhh . Hmm . But Hmm . But this is I I 'm still , um , not convinced that you can do much at all on the text on the flat file that that you know , the text representation . e Because the text representation is gonna be , uh , not reflecting the structure of of your words and annotations . It 's just it 's No . You you have to what you have to do is you have to basically Y yeah . You can use Perl to read it in and construct a internal representation that is essentially a lattice . But , the and then Right . But that 's what you 'll have to do . Bec - be Oh , maybe um Well Ma - well , maybe you should actually look at it yourself too to get a sense of what it is you 'll you 'll be dealing with , because , um , you know , Adam might have one opinion but you might have another , so I think the more eyes look at this the better . Mmm . Is there an is there an IP - API ? OK . There used to be a problem that they get too large , and so basically the uh the filesystem wouldn't Maybe you could extend the API to , uh , support , uh , like splitting up , you know , conceptually one file into smaller files on disk so that you can essentially , you know , have arbitrarily long f Yeah . OK . What does the P stand for anyway ? No , P - files were around way before Quicknet . P - files were were around when w with , um , RAP . Right ? You worked with P - files . I worked with P - files . No . Yeah . @ @ j I think there 's Mmm . Mm - hmm . Um , it would be nice um , eh , gr this is sort of r regarding uh , uh it 's related but not directly germane to the topic of discussion , but , when it comes to annotations , um , you often find yourself in the situation where you have different annotations of the same , say , word sequence . OK ? And sometimes the word sequences even differ slightly because they were edited s at one place but not the other . So , once this data gets out there , some people might start annotating this for , I don't know , dialogue acts or , um , you know , topics or what the heck . You know , there 's a zillion things that people might annotate this for . And the only thing that is really sort of common among all the versi the various versions of this data is the word sequence , or approximately . Or the times . But , see , if you 'd annotate dialogue acts , you don't necessarily want to or topics you don't really want to be dealing with time - marks . You 'd it 's much more efficient for them to just see the word sequence , right ? I mean , most people aren't as sophisticated as as we are here with , you know , uh , time alignments and stuff . So So the the the point is Right . So , um , the p my point is that you 're gonna end up with , uh , word sequences that are differently annotated . And you want some tool , uh , that is able to sort of merge these different annotations back into a single , uh , version . OK ? Um , and we had this problem very massively , uh , at SRI when we worked , uh , a while back on , uh well , on dialogue acts as well as , uh , you know , um , what was it ? uh , utterance types . There 's , uh , automatic , uh , punctuation and stuff like that . Because we had one set of annotations that were based on , uh , one version of the transcripts with a particular segmentation , and then we had another version that was based on , uh , a different s slightly edited version of the transcripts with a different segmentation . So , we had these two different versions which were you know , you could tell they were from the same source but they weren't identical . So it was extremely hard to reliably merge these two back together to correlate the information from the different annotations . No . No . But once you have a file format , I can imagine writing not personally , but someone writing a tool that is essentially an alignment tool , um , that mediates between various versions , and uh , sort of like th uh , you know , you have this thing in UNIX where you have , uh , diff . There 's the , uh , diff that actually tries to reconcile different two diffs f based on the same original . Something like that , um , but operating on these lattices that are really what 's behind this uh , this annotation format . So So somewhere in the API you would like to have like a merge or some some function that merges two two versions . Right . Is Exactly . Right . So so just to let you know what we where we kluged it by , uh , doing uh , by doing Hhh . Both were based on words , so , bo we have two versions of the same words intersp you know , sprinkled with with different tags for annotations . And we did diff . Exactly ! And that 's how Yeah . But , you know , it had lots of errors and things would end up in the wrong order , and so forth . Uh , so , um , if you had a more Uh , it it was a kluge because it was basically reducing everything to uh , to uh , uh , to textual alignment . Um , so And you 're gonna get that because if the data gets out , people will do all kinds of things to it . And , uh , s you know , several years from now you might want to look into , um , the prosody of referring expressions . And someone at the university of who knows where has annotated the referring expressions . So you want to get that annotation and bring it back in line with your data . OK ? Yeah . Right . Time time times are ephemeral . Um Mm - hmm . Yeah . Yeah . Or she . Mmm . Mm - hmm . Mm - hmm . Ah , well . For th for the for the benefit of science we 'll read the digits . Transcript s thirty - six eleven , thirty - six thirty . two two five two five nine O three four two four five six seven O eight nine four eight two six O three zero eight eight zero one two three four six one seven five seven eight four five three seven nine one nine five seven zero . O O two five zero one O ."
}